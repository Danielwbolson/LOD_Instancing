using UnityEngine;
using System.Collections;
using System.Collections.Generic;

namespace MinVR
{
	[AddComponentMenu ("MinVR/Inputs/Managers/VR Stylus Input Manager")]
	public class VRStylusInputManager : VRInputMananger
	{
		[Header("Stylus 0's Event Fields")]
		[Tooltip ("The name of the VREvent to track (e.g., Head_Move, Hand_Move).")]
		public string trackingEventName0 = "Brush0_Move";
		[Tooltip ("The name of the VRDataIndex field where the 4x4 transformation matrix for the tracker data is stored, typically Transform.")]
		public string matrix4x4DataField0 = "Transform";
		[Tooltip ("The name of the VREvent generated by the button tracker (e.g., Brush0_Top_Button, Brush0_Bottom_Button).")]
		public string button0EventName0 = "Brush0_Top_Button";
		[Tooltip ("The name of the VRDataIndex field where the button state data is stored , typically action.")]
		public string button0StateField0 = "action";
		[Tooltip ("The name of the VREvent generated by the button tracker (e.g., Brush0_Top_Button, Brush0_Bottom_Button).")]
		public string button1EventName0 = "Brush0_Bottom_Button";
		[Tooltip ("The name of the VRDataIndex field where the button state data is stored , typically action.")]
		public string button1StateField0 = "action";

		[Header("Stylus 1's Event Fields")]
		[Tooltip ("The name of the VREvent to track (e.g., Head_Move, Hand_Move).")]
		public string trackingEventName1 = "Brush1_Move";
		[Tooltip ("The name of the VRDataIndex field where the 4x4 transformation matrix for the tracker data is stored, typically Transform.")]
		public string matrix4x4DataField1 = "Transform";
		[Tooltip ("The name of the VREvent generated by the button tracker (e.g., Brush0_Top_Button, Brush0_Bottom_Button).")]
		public string button0EventName1 = "Brush1_Top_Button";
		[Tooltip ("The name of the VRDataIndex field where the button state data is stored , typically action.")]
		public string button0StateField1 = "action";
		[Tooltip ("The name of the VREvent generated by the button tracker (e.g., Brush0_Top_Button, Brush0_Bottom_Button).")]
		public string button1EventName1 = "Brush1_Bottom_Button";
		[Tooltip ("The name of the VRDataIndex field where the button state data is stored , typically action.")]
		public string button1StateField1 = "action";

		public IVLabStylus stylus0 = new IVLabStylus(0);
		public IVLabStylus stylus1 = new IVLabStylus(1);

		public override void Refresh ()
		{
			// set the button phase to 'None' if it was 'Up' in the last frame.
			if (stylus0.btn0Phase == IVLabStylus.ButtonPhase.Up) {
				stylus0.btn0Phase = IVLabStylus.ButtonPhase.None;
			}
			if (stylus1.btn0Phase == IVLabStylus.ButtonPhase.Up) {
				stylus1.btn0Phase = IVLabStylus.ButtonPhase.None;
			}
				
			// set the button phase to 'Move' if it was 'Down' in the last frame.
			if (stylus0.btn0Phase == IVLabStylus.ButtonPhase.Down) {
				stylus0.btn0Phase = IVLabStylus.ButtonPhase.Move;
			}
			if (stylus1.btn0Phase == IVLabStylus.ButtonPhase.Down) {
				stylus1.btn0Phase = IVLabStylus.ButtonPhase.Move;
			}
		}

		public override void ProcessVREvent (List<VREvent> events)
		{
			foreach (VREvent e in events) {
				if (e.Name == trackingEventName0) { // stylus 0 
					stylus0.lastPos = stylus0.pos;
					stylus0.lastRot = stylus0.rot;
					Matrix4x4 m = VRConvert.ToMatrix4x4 (e.DataIndex.GetValueAsDoubleArray (matrix4x4DataField0));
					stylus0.pos = m.GetTranslation ();
					stylus0.rot = m.GetRotation ();
				} else if (e.Name == trackingEventName1) { // stylus 1
					stylus1.lastPos = stylus1.pos;
					stylus1.lastRot = stylus1.rot;
					Matrix4x4 m = VRConvert.ToMatrix4x4 (e.DataIndex.GetValueAsDoubleArray (matrix4x4DataField1));
					stylus1.pos = m.GetTranslation ();
					stylus1.rot = m.GetRotation ();
				} else if (e.Name == button0EventName0) { // stylus 0, button 0
					// (0 or 1) that usually means (released or pressed)
					int state = e.DataIndex.GetValueAsInt (button0StateField0);
					if (state == 1) {
						stylus0.btn0Phase = IVLabStylus.ButtonPhase.Down;
					} else if (state == 0) {
						stylus0.btn0Phase = IVLabStylus.ButtonPhase.Up;
					}
				} else if (e.Name == button1EventName0) { // stylus 0, button 1
					// (0 or 1) that usually means (released or pressed)
					int state = e.DataIndex.GetValueAsInt (button1StateField0);
					if (state == 1) {
						stylus0.btn1Phase = IVLabStylus.ButtonPhase.Down;
					} else if (state == 0) {
						stylus0.btn1Phase = IVLabStylus.ButtonPhase.Up;
					}
				} else if (e.Name == button0EventName1) { // stylus 1, button 0
					// (0 or 1) that usually means (released or pressed)
					int state = e.DataIndex.GetValueAsInt (button0StateField1);
					if (state == 1) {
						stylus1.btn0Phase = IVLabStylus.ButtonPhase.Down;
					} else if (state == 0) {
						stylus1.btn0Phase = IVLabStylus.ButtonPhase.Up;
					}
				} else if (e.Name == button1EventName1) { // stylus 1, button 1
					// (0 or 1) that usually means (released or pressed)
					int state = e.DataIndex.GetValueAsInt (button1StateField1);
					if (state == 1) {
						stylus1.btn1Phase = IVLabStylus.ButtonPhase.Down;
					} else if (state == 0) {
						stylus1.btn1Phase = IVLabStylus.ButtonPhase.Up;
					}
				} else {
					// unrecognized event
				}
			}
		}
	}
}
